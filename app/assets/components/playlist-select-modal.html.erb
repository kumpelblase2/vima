<link rel="import" href="<%= asset_path('card-modal.html') %>">
<link rel="import" href="<%= asset_path('selectable-list.html') %>">

<template id="playlist-select-modal">
  <card-modal :closeable="true" :opened="shown" @close="close">
    <span slot="title">Add to playlist</span>
    <div>
      <selectable-list :elements.sync="playlists" @select="onPlaylistSelect"></selectable-list>
      <div class="control">
        <input class="input" v-model="playlistName" placeholder="New Playlist Name" />
      </div>
    </div>
    <div slot="actions">
      <button class="button is-success" :class="{ 'is-loading': isSaving }" @click="savePlaylist">Save</button>
      <button class="button" @click="close">Cancel</button>
    </div>
  </card-modal>
</template>

<script>
    Vue.component('playlist-select-modal', {
        template: document.currentScript.ownerDocument.querySelector("#playlist-select-modal").innerHTML,
        props: {
            shown: {
                type: Boolean,
                'default': false
            }
        },
        data: function() {
            return {
                playlists: [],
                isSaving: false,
                playlistName: ""
            };
        },
        methods: {
            close: function() {
                this.shown = false;
            },
            savePlaylist: function() {
                $.ajax({
                    url: "/playlists.json",
                    method: 'POST',
                    data: {
                        playlist: {
                            name: this.playlistName
                        }
                    },
                    success: (response) => {
                        this.isSaving = false;
                        this.onPlaylistSelect(response);
                        this.close();
                    }
                });
            },
            loadPlaylists: function() {
                $.ajax({
                    url: "/playlists.json",
                    success: (response) => {
                        this.loaded = true;
                        this.playlists = response;
                    }
                });
            },
            onPlaylistSelect: function(playlist) {
                this.$dispatch('playlist-selected', playlist);
                this.close();
            }
        },
        watch: {
            shown: function(val) {
                if(val) {
                    this.loadPlaylists();
                }
            }
        }
    });
</script>