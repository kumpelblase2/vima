<link rel="import" href="<%= asset_path('video-card.html') %>">
<link rel="import" href="<%= asset_path('video-edit-modal.html') %>">

<template id="library-view">
    <div class="columns is-multiline">
        <video-card :url="video" v-for="video in videos" :metadata.sync="metadata" @edit-request="openEdit"></video-card>
    </div>
    <video-edit-modal v-if="currentlyEditing" :video="currentlyEditing" :shown="currentlyEditing != null" @edit-finish="closeEdit"></video-edit-modal>
</template>

<script>
    Vue.component('library-view', {
        template: document.currentScript.ownerDocument.querySelector("#library-view").innerHTML,
        props: {
            metadata: Array
        },
        data: function() {
            return {
                videos: [],
                loaded: false,
                lastQuery: null,
                currentlyEditing: null,
                selected: []
            }
        },
        methods: {
            load: function() {
                this.loaded = false;
                $.ajax({
                    url: "/videos/list.json",
                    success: (response) => {
                        this.loaded = true;
                        this.videos = response;
                    }
                });
            },
            query: function(query) {
                this.loaded = false;
                $.ajax({
                    url: "/videos/search.json?query=" + encodeURIComponent(query),
                    success: (videos) => {
                        this.loaded = true;
                        this.videos = videos;
                    }
                });

                this.lastQuery = query;
            },
            refresh: function() {
                if(this.lastQuery && this.lastQuery.length() > 0) {
                    this.query(this.lastQuery);
                } else {
                    this.load();
                }
            },
            openEdit: function(video) {
                this.currentlyEditing = video;
            },
            closeEdit: function() {
                this.currentlyEditing = null;
            }
        },
        events: {
            'video-update': function(video) {
                //TODO
            },
            'video-select': function(video) {
                this.selected.push(video);
            },
            'video-deselect': function(video) {
                const index = this.selected.findIndex((elem) => elem.id === video.id);
                if(index >= 0) {
                    this.selected.splice(index, index + 1);
                }
            }
        },
        ready: function() {
            this.load();
        }
    });
</script>